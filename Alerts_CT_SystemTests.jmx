<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Alerts_CTServer_Testcases" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Alerts_CTC" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1493285646000</longProp>
        <longProp name="ThreadGroup.end_time">1493285646000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname=" Presetup Header " enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">Application/JSON</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">Application/JSON</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">bearer ${accesstoken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="Presetup Severdetails" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">fl-ctconnect.nimaws.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Parameters" enabled="true">
          <stringProp name="filename">D:\Automation_CT_New\TestData_emails_Alerts.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">email,password,mdn,device_uniqueid,mdn1,device_uniqueid2</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Presetup:Create a Account" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;accepted_ts_and_cs&quot;: false,&#xd;
  &quot;email&quot;: &quot;${email}&quot;,&#xd;
  &quot;invite_code&quot;: &quot;&quot;,&#xd;
  &quot;last_name&quot;: &quot;smoke&quot;,&#xd;
  &quot;name&quot;: &quot;smoke1&quot;,&#xd;
  &quot;password&quot;: &quot;${password}&quot;,&#xd;
  &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/accounts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save Account ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();
log.info(&quot;This is suneela&quot; + data);
def slurper = new JsonSlurper();
def result  = slurper.parseText(data);
log.info(&quot;This is suneela&quot; + result);
def id = result.get(&quot;account_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;accountid&apos;, id );
id = id+&quot;.members&quot;;
log.info(&quot;This is suneela&quot; + id);
vars.put(&apos;groupid&apos;, id );</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Account ID  returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-803333011">account_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PreSetup:Login to a Account " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;email&quot;: &quot;${email}&quot;,&#xd;
  &quot;password&quot;: &quot;${password}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  AccessToken" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();
//log.info(&quot;This is sreedhar &quot; + data);
def slurper = new JsonSlurper();
def result  = slurper.parseText(data);
//log.info(&quot;This is suneela sreedhar &quot; + result);
def id = result.get(&quot;jwt&quot;);

// Persist the TemplateId of the new Template in the context.
//vars.put(&apos;temp&apos;, id );
//println(&quot; suneela &quot; + id);
//log.info(&quot;This is suneela jwt&quot; + id);
def id1 = id.get(&quot;access_token&quot;);
log.info(&quot;This is suneela access_token is &quot; + id1);
vars.put(&apos;accesstoken&apos;, id1 );</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1177318867">account</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Scope.variable">sampler log</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PreSetup:Get an Account Information" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/accounts/${accountid}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Account information" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;


String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;account_id&quot;);
log.info(&quot;This is account &quot; + id);
//def id = result.get(&quot;account_id&quot;);
log.info(&quot;This is group ifno  &quot; + &quot;${groupid}&quot;);
//assert id ==  ${accountid};
// Persist the TemplateId of the new Template in the context.
/* def newaccountid = ${accountid};

Failure = !newaccounid.equals(id);
vars.put(&apos;newid&apos;, id );

if (id == newid) {
  FailureMessage = &quot;Account ids are not matching&quot;;
} */</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-803333011">account_id</stringProp>
              <stringProp name="96619420">email</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Scope.variable"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Presetup: Create a device " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;mdn&quot;: &quot;${mdn}&quot;,&#xd;
  &quot;model&quot;: &quot;osmodel&quot;,&#xd;
  &quot;name&quot;: &quot;Android&quot;,&#xd;
  &quot;os&quot;: &quot;osname&quot;,&#xd;
  &quot;os_version&quot;: &quot;os1.0&quot;,&#xd;
  &quot;push_token&quot;: &quot;dsds&quot;,&#xd;
  &quot;unique_id&quot;: &quot;${device_uniqueid}&quot;,&#xd;
  &quot;location_agent_id&quot;: &quot;none&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/devices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Account information" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);


def id = result.get(&quot;device_id&quot;);
// Persist the TemplateId of the new Template in the context.
vars.put(&apos;deviceid&apos;, id );

def id1 = result.get(&quot;fk_device_id&quot;)
vars.put(&apos;fkdeviceid&apos;, id1 );


</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PreSetup:Get an device  Information" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/devices?unique_id=${device_uniqueid}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Account information" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);
log.info(&quot;This is result  info&quot; + result);
result = result[0];
log.info(&quot;This is new result info&quot; + result);
def id = result.get(&quot;device_id&quot;)
log.info(&quot;This is new result info&quot; + result);
// Persist the TemplateId of the new Template in the context.
vars.put(&apos;deviceid&apos;, id );

def id1 = result.get(&quot;fk_device_id&quot;)
vars.put(&apos;fkdeviceid&apos;, id1 );


</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="25209764">device_id</stringProp>
              <stringProp name="-182435670">fk_device_id</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Scope.variable"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=" PreSetup :Create Place" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;categories&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;1&quot;,&#xd;
      &quot;name&quot;: &quot;place1&quot;,&#xd;
      &quot;parent_category&quot;: {&quot;code&quot;: &quot;my_category&quot;,&#xd;
                          &quot;name&quot;: &quot;parent place&quot;}&#xd;
    }&#xd;
  ],&#xd;
  &quot;enhanced_contents&quot;: &quot;my_enhanced_contents&quot;,&#xd;
  &quot;geofence&quot;: {&#xd;
    &quot;latitude&quot;: 33.654619,&#xd;
    &quot;longitude&quot;: -117.651162,&#xd;
    &quot;name&quot;: &quot;THHS Fence&quot;,&#xd;
    &quot;radius&quot;: 400&#xd;
  },&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;location&quot;: {&#xd;
    &quot;city&quot;: &quot;Mission Viejo&quot;,&#xd;
    &quot;coordinate&quot;: {&#xd;
      &quot;latitude&quot;: 33.654252,&#xd;
      &quot;longitude&quot;: -117.650531&#xd;
    },&#xd;
    &quot;country&quot;: &quot;USA&quot;,&#xd;
    &quot;country_code&quot;: &quot;331&quot;,&#xd;
    &quot;formatted_address&quot;: &quot;27501 Mustang Run, Mission Viejo, CA&quot;,&#xd;
    &quot;house_number&quot;: 27501,&#xd;
    &quot;postal&quot;: 92691,&#xd;
    &quot;state&quot;: &quot;CA&quot;,&#xd;
    &quot;street&quot;: &quot;Mustang Run&quot;,&#xd;
    &quot;type&quot;: &quot;School&quot;&#xd;
  },&#xd;
  &quot;ltk_place_id&quot;: &quot;&quot;,&#xd;
  &quot;name&quot;: &quot;Trabuco Hills High School&quot;,&#xd;
  &quot;phones&quot;: [&#xd;
    {&#xd;
      &quot;area&quot;: 949,&#xd;
      &quot;country&quot;: 1,&#xd;
      &quot;number&quot;: 7681934,&#xd;
      &quot;type&quot;: &quot;home&quot;&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/places</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="save place id" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;place_id&quot;)

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;placeid&apos;, id );</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC1: Verify alert creation for the arrival of a family member " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_arrive&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC1-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_arrive}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC2:  Verify alert creation for the departure of a family member " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;exit&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_depart&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC2-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_depart}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC3:  Verify that the alert is temporarily disabled if disabled field is enabled. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;exit&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: true,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC3&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC3-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC3}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC4:  Verify that email notifications  for the notifier specified are  not generated for disabled alerts." enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;exit&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: true,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;ctc_to_email_alert_notification&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC4&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC4-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC4}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC5:  Verify that sms notifications  for the notifier specified are  not generated for disabled alerts." enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;exit&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: true,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC5&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC5-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC5}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC6: Verify that the single devices are added to the existing alert" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC6&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC6-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC6}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Presetup_TC7: Create  one more device " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;mdn&quot;: &quot;${mdn1}&quot;,&#xd;
  &quot;model&quot;: &quot;osmodel&quot;,&#xd;
  &quot;name&quot;: &quot;Android&quot;,&#xd;
  &quot;os&quot;: &quot;osname&quot;,&#xd;
  &quot;os_version&quot;: &quot;os1.0&quot;,&#xd;
  &quot;push_token&quot;: &quot;dsds&quot;,&#xd;
  &quot;unique_id&quot;: &quot;${device_uniqueid2}&quot;,&#xd;
  &quot;location_agent_id&quot;: &quot;none&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/devices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Account information" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);


def id = result.get(&quot;device_id&quot;);
// Persist the TemplateId of the new Template in the context.
vars.put(&apos;deviceid2&apos;, id );

def id1 = result.get(&quot;fk_device_id&quot;)
vars.put(&apos;fkdeviceid2&apos;, id1 );


</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC7:- Verify that the list of devices are added to the existing alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;,&#xd;
    &quot;${deviceid2}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC7&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC7-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC7}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC8: Verify the alerts are created for &quot;Best Effort Normal&quot; Qos. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;always_on&quot;,&#xd;
  &quot;qos&quot;: &quot;Best Effort Normal&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC8&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC8-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC8}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC9-  Verify the alerts are created for &quot;Best Effort Extendedl&quot; Qos. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;always_on&quot;,&#xd;
  &quot;qos&quot;: &quot;Best Effort Normal&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC9&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC9-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC9}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC10: Verify the alerts are created for &quot;Precise Assured&quot; Qos. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;always_on&quot;,&#xd;
  &quot;qos&quot;: &quot;Best Effort Normal&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC10&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC10-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC10}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC11-  Verify the alerts are created for &quot;Course Assured&quot; Qos. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;always_on&quot;,&#xd;
  &quot;qos&quot;: &quot;Best Effort Normal&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC11&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC11-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC11}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC12: Verify default qos for &quot;schedule_locate type of alerts" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC12&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC12-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC12}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC13-  Verify the alerts are created for single callback recipient in alert_notifier " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC13&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC13-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC13}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC14-  Verify the alerts are created for multiple callback recipient in alert_notifier " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;google.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC14&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC14-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC14}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC15- Verify the alerts are created for single email recipient in alert_notifier " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC15&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC15-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC15}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC16- Verify the alerts are created for multiple  email recipient in alert_notifier " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;,&#xd;
      &quot;suneela.sree@gmail.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC16&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC16-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC16}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC17- Verify the alerts are created for a specified notifier_id in alert_notifier " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC17&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC17-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC17}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC18-Verify the alerts are created for single push  recipient in alert_notifier " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;,&#xd;
      &quot;${deviceid2}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC18&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC18-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC18}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC19-Verify the alerts are created for multiple  push  recipient in alert_notifier " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;,&#xd;
      &quot;${deviceid2}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC19&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC19-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC19}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC20-Verify the alerts are updated push_recipeints for specified notifier_id " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC20&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC20-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC20}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC21-Verify the alerts are created for a specified push_template " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC21&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC21-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC21}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC22-Verify the alerts are created for single sms recipients in alert_notifier  " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC22&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC22-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC22}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC23-Verify the alerts are created for multiple sms recipients in alert_notifier  " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC23&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC23-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC23}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC24-Verify the alerts are updated sms_recipeints for specified notifier_id " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC24&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC24-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC24}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC25-Verify the alerts are created for a specified sms_template " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC25&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC25-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC25}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC26- Verify the alerts are created  and made active for alldays in a week " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111111&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC26&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC26-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC26}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC27-  Verify the alerts are created  and made inactive for alldays in a week " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0000000&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC27&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC27-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC27}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC28-    Verify the alerts are created  and made active for different combinations days  in a week" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0011010&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC28&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC28-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC28}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC29-   Verify the alerts are updated to all active days if active_days are not specified " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;always_on&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC29&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC29-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC29}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC30-   Verify the alerts are updated to the specified time_zone " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0001100&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/New_York&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC30&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC30-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC30}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC31-  Verify the alerts are updated to the specified start_time  " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC31&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC31-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC31}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC32-  Verify the alerts are updated to the specified start_time in 24 hour formatt " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC32&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC32-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC32}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC33-  Verify the alerts are updated to the specified end_time  " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;08:05&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC33&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC33-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC33}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC34-   Verify the alerts are updated to the specified end_time in 24 hour formatt " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC34&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC34-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC34}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC35-   Verify the alerts are updated to the specified repeat_count " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;Daily&quot;,&#xd;
    &quot;repeat_period&quot;: 1,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC35&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC35-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC35}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC36-    Verify the alerts are updated for repeat_pattern none " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;none&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC36&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC36-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC36}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC37-    Verify the alerts are updated for repeat_pattern Daily " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;Daily&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC37&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC37-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC37}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC38-    Verify the alerts are updated for repeat_pattern Monthly " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;Monthly&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC38&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC38-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC38}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC39-    Verify the alerts are updated for repeat_pattern Yearly " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;Yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC39&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC39-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC39}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC40-    Verify the alerts are updated repeat_period for repeat_pattern Monthly " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;Monthly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC40&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC40-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC40}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
              <stringProp name="1791021285">repeat_period</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC41-    Verify the alerts are updated repeat_period for repeat_pattern Daily " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;Daily&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC41&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC41-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC41}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
              <stringProp name="1791021285">repeat_period</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC42-    Verify the alerts are updated repeat_period for repeat_pattern Monthly " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;Monthly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC42&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC42-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC41}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
              <stringProp name="1791021285">repeat_period</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC43-     Verify the alerts are updated repeat_period for repeat_pattern Yearly " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC43&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC43-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC43}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
              <stringProp name="1791021285">repeat_period</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC44-      Verify the alerts are updated repeat_start (ISO8601 time formatt) " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC44&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC44-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC44}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC45-      Verify the alerts are updated  repeat_start to  start_time if  not specified " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC45&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC45-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC45}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC46-     Verify the alerts are updated  with specified repeat_stop " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;08:00&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC46&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC46-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC46}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC47-   Verify start_time and end_time are updated in Alerts for different timeZones " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC47&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC47-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC47}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC48-   Verify alerts are created /updated for specified callback_url " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC48&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC48-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC48}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC49-   Verify alerts are created  /updated with method as http for specified callback_url " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;http&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC49&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC49-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC49}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC50-   Verify alerts are created  /updated with method as https for specified callback_url " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC50&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC50-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC50}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC51-   Verify proper data is displayed in scheduled location of a device   " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC4}/${deviceid}/scheduled_location</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="false">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC50&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC52-   Verify proper data is displayed in scheduled location of a device   for a different alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC6}/${deviceid}/scheduled_location</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="false">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC50&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC53-    Verify the alert is deleted successfully " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC49}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="false">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC50&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC54-  Verify the alert which is deleted does not allow modification " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC49}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="false">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC50&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51512">404</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC55-    Verify that the notification email is sent to the specified notifier for &quot;always_on&quot; type of alerts. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;http&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;always_on&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC55&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC55-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC55}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC56-    Verify that the notification email is sent to the specified notifier for &quot;scheduled_on&quot; type of alerts. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;http&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_on&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC56&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC56-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC56}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC57-    Verify that the notification email is sent to the specified notifier for &quot;scheduled_locate&quot; type of alerts. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;http&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC57&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC57-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC57}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC58-    Verify that the notification email is sent to the specified notifier for &quot;&quot;curfew&quot;&quot; type of alerts. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;http&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;curfew&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC58&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC58-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC58}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC59-    Verify that the notification email is sent to the specified notifier for &quot;&quot;reverse_curfew&quot;&quot; type of alerts. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;http&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;reverse_curfew&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC59&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC59-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC59}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC60-    Verify that the email template is used as&quot;ctc_to_email_scheduled_locate_alert_notification&quot; for scheduled_locate type of alerts " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;http&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;ctc_to_email_scheduled_locate_alert_notification&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC60&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC60-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC60}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC61: Verify that the alerts are generated for arrival of the Family members. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC61&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC61-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC61}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC62:  Verify alert creation for the departure of a family member " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;exit&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC62&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC62-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC62}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC63:  Verify alert creation for both the arrival and the departure of a family member " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;both&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC63&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC63-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC63}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC64:   Verify that the boundary distance is specified in the arrival alerts that are generated for non default values of radius field. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 400,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC64&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC64-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC64}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC65:   Verify that the boundary distance is specified in the departure alerts that are generated for non default values of radius field. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;exit&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 400,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;string&quot;,&#xd;
        &quot;method&quot;: &quot;https&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;string&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;null&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;0111110&quot;,&#xd;
    &quot;end_time&quot;: &quot;&quot;,&#xd;
    &quot;repeat_count&quot;: 0,&#xd;
    &quot;repeat_pattern&quot;: &quot;string&quot;,&#xd;
    &quot;repeat_period&quot;: 0,&#xd;
    &quot;repeat_start&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-04-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;01:58&quot;,&#xd;
    &quot;time_zone&quot;: &quot;US/Eastern&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC65&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC65-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC65}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC66-   Verify that the notification sms is sent to the specified notifier for &quot;always_on&quot; type of alerts. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;http&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;always_on&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC66&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC66-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC66}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC67-    Verify that the notification sms is sent to the specified notifier for &quot;scheduled_on&quot; type of alerts. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;http&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_on&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC67&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC67-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC67}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC68-     Verify that the notification sms is sent to the specified notifier for &quot;scheduled_locate&quot; type of alerts. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;http&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC68&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC68-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC68}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC69-    Verify that the notification sms is sent to the specified notifier for &quot;curfew&quot; type of alerts. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;http&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;curfew&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC69&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC69-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC69}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC70-     Verify that the notification sms is sent to the specified notifier for &quot;reverse_curfew&quot; type of alerts. " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;action&quot;: &quot;enter&quot;,&#xd;
  &quot;alert_creator&quot;: &quot;${accountid}&quot;,&#xd;
  &quot;alert_radius&quot;: 60,&#xd;
  &quot;devices&quot;: [&#xd;
    &quot;${deviceid}&quot;&#xd;
  ],&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;group_id&quot;: &quot;${groupid}&quot;,&#xd;
  &quot;notifier&quot;: {&#xd;
    &quot;callback_recipients&quot;: [&#xd;
      {&#xd;
        &quot;callback_url&quot;: &quot;ctconnect-qa.nimaws.com&quot;,&#xd;
        &quot;method&quot;: &quot;http&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;callback_template&quot;: &quot;string&quot;,&#xd;
    &quot;email_recipients&quot;: [&#xd;
      &quot;suneela.sadhu@ispace.com&quot;&#xd;
    ],&#xd;
    &quot;email_template&quot;: &quot;dummy&quot;,&#xd;
    &quot;notifier_id&quot;: &quot;dd145788-9f01-4d43-8ff2-f7c14f1b278c&quot;,&#xd;
    &quot;parameter_list&quot;: [&#xd;
      {&#xd;
        &quot;description&quot;: &quot;member&quot;,&#xd;
        &quot;name&quot;: &quot;alert&quot;,&#xd;
        &quot;type&quot;: &quot;scheduled_locate&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;push_recipients&quot;: [&#xd;
      &quot;${deviceid}&quot;&#xd;
    ],&#xd;
    &quot;push_template&quot;: &quot;ctc_to_app_alert_notification&quot;,&#xd;
    &quot;sms_recipients&quot;: [&#xd;
      &quot;9495353394&quot;,&#xd;
      &quot;9495353395&quot;&#xd;
    ],&#xd;
    &quot;sms_template&quot;: &quot;ctc_to_sms_alert_notification&quot;&#xd;
  },&#xd;
  &quot;place_id&quot;: &quot;${placeid}&quot;,&#xd;
  &quot;schedule&quot;: {&#xd;
    &quot;active_days&quot;: &quot;1111101&quot;,&#xd;
    &quot;end_time&quot;: &quot;18:05&quot;,&#xd;
    &quot;repeat_count&quot;: 1,&#xd;
    &quot;repeat_pattern&quot;: &quot;yearly&quot;,&#xd;
    &quot;repeat_period&quot;: 2,&#xd;
    &quot;repeat_start&quot;: &quot;2017-05-24&quot;,&#xd;
    &quot;repeat_stop&quot;: &quot;2017-07-24&quot;,&#xd;
    &quot;start_time&quot;: &quot;13:05&quot;,&#xd;
    &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;&#xd;
  },&#xd;
  &quot;type&quot;: &quot;reverse_curfew&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertid_TC70&apos;, id );
log.info(&quot;This is alert&quot; + id);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TC70-Verify using Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC70}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Save  Alert ID" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.apache.jmeter.samplers.SampleResult; 
import groovy.json.JsonSlurper;

String data = prev.getResponseDataAsString();

def slurper = new JsonSlurper();
def result  = slurper.parseText(data);

def id = result.get(&quot;alert_id&quot;);

// Persist the TemplateId of the new Template in the context.
vars.put(&apos;alertidnew&apos;, id );

/*
boolean set_assertion = true;

if (id != id)
{
    set_assertion = false;
    log.error(&quot;alerts are not matching&quot;);
    assert set_assertion == true;
    SampleResult.setSuccessful(false);  
} */
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Alert ID returned" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1615403742">alert_id</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC1 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_arrive}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC2 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_depart}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC3 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC3}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC4 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC4}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC5 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC5}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC6 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC6}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC7 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC7}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC8 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC8}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC9 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC9}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC10 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC10}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC11 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC11}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC12 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC12}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC13 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC13}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC14 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC14}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC15 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC15}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC16 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC16}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC17 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC17}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC18 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC18}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC19 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC19}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC20 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC20}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC21 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC21}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC22 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC22}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC23 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC23}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC24 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC24}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC25 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC25}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC26 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC26}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC27 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC27}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC28 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC28}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC29 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC29}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC30 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC30}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC31 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC31}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC32 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC32}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC33 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC33}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC34 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC34}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC35 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC35}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC36 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC36}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC37 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC37}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC38 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC38}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC39 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC39}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC40 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC40}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC41 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC41}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC42 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC42}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC43 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC43}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC44 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC44}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC45 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC45}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC46 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC46}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC47 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC47}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC48 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC48}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC49 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC49}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC50 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC50}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC51 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC51}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC52 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC52}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC53 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC53}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC54 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC54}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC55 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC55}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC56 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC56}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC57 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC57}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC58 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC58}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC59 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC59}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC60 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC60}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC61 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC61}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC62 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC62}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC63 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC63}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC64 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC64}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC65 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC65}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC66 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC66}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC67 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC67}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC68 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC68}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC69 alert " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC68}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created  TC70 alert  " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/alerts/${alertid_TC70}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created place " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/places/${placeid}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created device" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/devices/${deviceid}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup :Delete a created device TC7" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/devices/${deviceid2}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cleanup:Delete an account " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/accounts/${accountid}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response code " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Alerts_CTC_Report " enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <fileName>true</fileName>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">D:\VZFL\TestAutomation\Alerts_CTC_Report.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8080</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list"/>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">true</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
